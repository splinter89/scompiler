<программа> ::= <элемент_программы>
<программа> ::= <программа_р><элемент_программы>

<элемент_программы> ::= <класс>
<элемент_программы> ::= <реализация_метода_класса>
<элемент_программы> ::= <декларация_переменных>
<элемент_программы> ::= <функция>

<класс> ::= class <идентификатор>"{"{[<спецификатор_доступа>:]{(<декларация_свойств_класса>|<метод_класса>)}}"}"

<спецификатор_доступа> ::= public
<спецификатор_доступа> ::= private

<метод_класса> ::= <идентификатор>"(){}"
<метод_класса> ::= <идентификатор>"(){"<элемент_блока_р>"}"
<метод_класса> ::= <идентификатор>"("<список_аргументов>"){}"
<метод_класса> ::= <идентификатор>"("<список_аргументов>"){"<элемент_блока_р>"}"
<метод_класса> ::= <тип_переменной> <идентификатор>"(){}"
<метод_класса> ::= <тип_переменной> <идентификатор>"(){"<элемент_блока_р>"}"
<метод_класса> ::= <тип_переменной> <идентификатор>"("<список_аргументов>"){}"
<метод_класса> ::= <тип_переменной> <идентификатор>"("<список_аргументов>"){"<элемент_блока_р>"}"
<метод_класса> ::= void <идентификатор>"(){}"
<метод_класса> ::= void <идентификатор>"(){"<элемент_блока_р>"}"
<метод_класса> ::= void <идентификатор>"("<список_аргументов>"){}"
<метод_класса> ::= void <идентификатор>"("<список_аргументов>"){"<элемент_блока_р>"}"
<метод_класса> ::= ~<идентификатор>"(){}"
<метод_класса> ::= ~<идентификатор>"(){"<элемент_блока_р>"}"
<метод_класса> ::= ~<идентификатор>"("<список_аргументов>"){}"
<метод_класса> ::= ~<идентификатор>"("<список_аргументов>"){"<элемент_блока_р>"}"

<реализация_метода_класса> ::= <идентификатор>::<идентификатор>"(){}"
<реализация_метода_класса> ::= <идентификатор>::<идентификатор>"(){"<элемент_блока_р>"}"
<реализация_метода_класса> ::= <идентификатор>::<идентификатор>"("<список_аргументов>"){}"
<реализация_метода_класса> ::= <идентификатор>::<идентификатор>"("<список_аргументов>"){"<элемент_блока_р>"}"
<реализация_метода_класса> ::= <тип_переменной> <идентификатор>::<идентификатор>"(){}"
<реализация_метода_класса> ::= <тип_переменной> <идентификатор>::<идентификатор>"(){"<элемент_блока_р>"}"
<реализация_метода_класса> ::= <тип_переменной> <идентификатор>::<идентификатор>"("<список_аргументов>"){}"
<реализация_метода_класса> ::= <тип_переменной> <идентификатор>::<идентификатор>"("<список_аргументов>"){"<элемент_блока_р>"}"
<реализация_метода_класса> ::= void <идентификатор>::<идентификатор>"(){}"
<реализация_метода_класса> ::= void <идентификатор>::<идентификатор>"(){"<элемент_блока_р>"}"
<реализация_метода_класса> ::= void <идентификатор>::<идентификатор>"("<список_аргументов>"){}"
<реализация_метода_класса> ::= void <идентификатор>::<идентификатор>"("<список_аргументов>"){"<элемент_блока_р>"}"
<реализация_метода_класса> ::= <идентификатор>::~<идентификатор>"(){}"
<реализация_метода_класса> ::= <идентификатор>::~<идентификатор>"(){"<элемент_блока_р>"}"
<реализация_метода_класса> ::= <идентификатор>::~<идентификатор>"("<список_аргументов>"){}"
<реализация_метода_класса> ::= <идентификатор>::~<идентификатор>"("<список_аргументов>"){"<элемент_блока_р>"}"

<функция> ::= <тип_переменной> <идентификатор>"(){}"
<функция> ::= <тип_переменной> <идентификатор>"(){"<элемент_блока_р>"}"
<функция> ::= <тип_переменной> <идентификатор>"("<список_аргументов>"){}"
<функция> ::= <тип_переменной> <идентификатор>"("<список_аргументов>"){"<элемент_блока_р>"}"
<функция> ::= void <идентификатор>"(){}"
<функция> ::= void <идентификатор>"(){"<элемент_блока_р>"}"
<функция> ::= void <идентификатор>"("<список_аргументов>"){}"
<функция> ::= void <идентификатор>"("<список_аргументов>"){"<элемент_блока_р>"}"

<список_аргументов> ::= <аргумент>
<список_аргументов> ::= <список_аргументов_р><аргумент>

<аргумент> ::= <тип_переменной> <идентификатор>
<аргумент> ::= const <тип_переменной> <идентификатор>
<аргумент> ::= <тип_переменной> &<идентификатор>
<аргумент> ::= const <тип_переменной> &<идентификатор>

<блок> ::= <элемент_блока>
<блок> ::= "{}"
<блок> ::= "{"<элемент_блока_р>"}"

<элемент_блока> ::= <декларация_переменных>
<элемент_блока> ::= ;
<элемент_блока> ::= <выражение>;
<элемент_блока> ::= <возврат>;
<элемент_блока> ::= <цикл>
<элемент_блока> ::= <ветвление>

<возврат> ::= return <выражение>

<выражение> ::= <оператор_1>
<выражение> ::= <выражение>,<оператор_1>

<оператор_1> ::= <оператор_2>
<оператор_1> ::= <объект>=<оператор_2>
<оператор_1> ::= <объект>+=<оператор_2>
<оператор_1> ::= <объект>-=<оператор_2>
<оператор_1> ::= <объект>*=<оператор_2>
<оператор_1> ::= <объект>/=<оператор_2>
<оператор_1> ::= <объект>%=<оператор_2>

<оператор_2> ::= <оператор_3>
<оператор_2> ::= <оператор_2>"||"<оператор_3>

<оператор_3> ::= <оператор_4>
<оператор_3> ::= <оператор_3>&&<оператор_4>

<оператор_4> ::= <оператор_5>
<оператор_4> ::= <оператор_4>==<оператор_5>
<оператор_4> ::= <оператор_4>!=<оператор_5>

<оператор_5> ::= <оператор_6>
<оператор_5> ::= <оператор_5>"<"<оператор_6>
<оператор_5> ::= <оператор_5>"<"=<оператор_6>
<оператор_5> ::= <оператор_5>">"<оператор_6>
<оператор_5> ::= <оператор_5>">"=<оператор_6>

<оператор_6> ::= <оператор_7>
<оператор_6> ::= <оператор_6>+<оператор_7>
<оператор_6> ::= <оператор_6>-<оператор_7>

<оператор_7> ::= <оператор_8>
<оператор_7> ::= <оператор_7>*<оператор_8>
<оператор_7> ::= <оператор_7>/<оператор_8>
<оператор_7> ::= <оператор_7>%<оператор_8>

<оператор_8> ::= <оператор_9>
<оператор_8> ::= +<оператор_9>
<оператор_8> ::= -<оператор_9>
<оператор_8> ::= !<оператор_9>
<оператор_8> ::= *<оператор_9>
<оператор_8> ::= ++<объект>
<оператор_8> ::= --<объект>
<оператор_8> ::= &<объект>

<оператор_9> ::= "("<выражение>")"
<оператор_9> ::= <литерал>
<оператор_9> ::= <объект>
<оператор_9> ::= <объект>++
<оператор_9> ::= <объект>--
<оператор_9> ::= <вызов_функции>

<вызов_функции> ::= <объект>"("<выражение>")"

<объект> ::= <идентификатор>
<объект> ::= <идентификатор>.<идентификатор>
<объект> ::= <идентификатор>-">"<идентификатор>

<декларация_свойств_класса> ::= <тип_переменной> <список_свойств_класса>;
<декларация_свойств_класса> ::= const <тип_переменной> <список_свойств_класса>;

<декларация_переменных> ::= <тип_переменной> <список_переменных>;
<декларация_переменных> ::= const <тип_переменной> <список_переменных>;

<тип_переменной> ::= int
<тип_переменной> ::= double
<тип_переменной> ::= char
<тип_переменной> ::= bool
<тип_переменной> ::= int*
<тип_переменной> ::= double*
<тип_переменной> ::= char*
<тип_переменной> ::= bool*

<список_свойств_класса> ::= <идентификатор>
<список_свойств_класса> ::= <список_свойств_класса_р><идентификатор>

<список_переменных> ::= <идентификатор>
<список_переменных> ::= <список_переменных_р><идентификатор>
<список_переменных> ::= <идентификатор>=<выражение>
<список_переменных> ::= <список_переменных_р><идентификатор>=<выражение>

<цикл> ::= <while-цикл>
<цикл> ::= <do-while-цикл>
<цикл> ::= <for-цикл>

<while-цикл> ::= while"("<выражение>")"<блок>

<do-while-цикл> ::= do <блок>while"("<выражение>")";

<for-цикл> ::= for"("<выражение>;<выражение>;<выражение>")"<блок>

<ветвление> ::= if"("<выражение>")"<блок>
<ветвление> ::= if"("<выражение>")"<блок>else <блок>


<программа_р> ::= <программа>
<программа_р> ::= <программа_р><программа>

<элемент_блока_р> ::= <элемент_блока>
<элемент_блока_р> ::= <элемент_блока_р><элемент_блока>

<список_аргументов_р> ::= <список_аргументов>,
<список_аргументов_р> ::= <список_аргументов_р><список_аргументов>,

<список_свойств_класса_р> ::= <список_свойств_класса>,
<список_свойств_класса_р> ::= <список_свойств_класса_р><список_свойств_класса>,

<список_переменных_р> ::= <список_переменных>,
<список_переменных_р> ::= <список_переменных_р><список_переменных>,


<T_ID> ::= ...
<T_CONST> ::= ...



<логический_литерал> ::= (true|false)
<константа_с_плавающей_точкой> ::= [(+|-)](<цифра>{<цифра>}.[<цифра>{<цифра>]|.<цифра>{<цифра>})[(e|E)<десятичная_целая_константа>]
<целая_константа> ::= (<десятичная_целая_константа>|<восьмеричная_целая_константа>|<шестнадцатеричная_целая_константа>)
<десятичная_целая_константа> ::= [(+|-)]<цифра>{<цифра>}
<восьмеричная_целая_константа> ::= [(+|-)]0{(0|…|7)}
<шестнадцатеричная_целая_константа> ::= [(+|-)]0x(0|…|9|a|…|f|A|…F){(0|…|9|a|…|f|A|…F)}
<цифра> ::= (0|…|9)
<буква> ::= (a|…|z|A|…|Z)
<символьная_константа> ::= '(?|\('|"""|n|t))'
<строковый_литерал> ::= """{(?|\('|"""|n|t))}"""

// lvalue == объект
// rvalue == выражение